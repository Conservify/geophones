#!/bin/sh
# -*- mode: sh -*-

# Parse command line.
unset PERFORM_COPY
unset BAD_DRIVE_MODE

while getopts xc OPTION
do
    case ${OPTION} in
        c) PERFORM_COPY=TRUE ;;
        x) BAD_DRIVE_MODE=TRUE ;;
        *) exit 2 ;;
    esac
done

function log() {
    /usr/bin/logger -t offsite-backup "$@"
}

log "Performing offsite backup..."

if [ -z "$BAD_DRIVE_MODE" ]; then
    mkdir -p /backup
    umount -f /backup > /dev/null 2>&1 || /bin/true

    if [ -e /dev/sda1 ]; then
        mount /dev/sda1 /backup
        if [ "$?" == 0 ]; then
            if [ -z "$PERFORM_COPY" ]; then
                ssh -t glacier "sudo -- sh -c '/etc/periodic/offsite-backup -x'"
                if [ "$?" == 0 ]; then
                    log "Offsite backup ssh done (OFFSITE_BACKUP:GOOD)"
                else
                    log "Offsite backup ssh failed (OFFSITE_BACKUP:FATAL)"
                fi
            else
                rsync -zvua --progress /backup lodge:/backup | /usr/bin/logger -t offsite-backup
                if [ "$?" == 0 ]; then
                    log "Offsite backup done (OFFSITE_BACKUP:GOOD)"
                else
                    log "Offsite backup copy failed (OFFSITE_BACKUP:FATAL)"
                fi
            fi

            # Log disk space of everything for monitoring.
            df -h | /usr/bin/logger -t "disk-space"

            umount -f /backup
        else
            log "/dev/sda1 unmountable (OFFSITE_BACKUP:FATAL)"
            exit 2
        fi
    else
        log "/dev/sda1 is the wrong type (OFFSITE_BACKUP:FATAL)"
        exit 2
    fi
else
    rsync -zvua --progress /mnt/mmcblk0p2/data lodge:/backup | /usr/bin/logger -t offsite-backup
    if [ "$?" == 0 ]; then
        log "Offsite backup done (OFFSITE_BACKUP:GOOD)"
    else
        log "Offsite backup copy failed (OFFSITE_BACKUP:FATAL)"
    fi

    df -h | /usr/bin/logger -t "disk-space"
fi
